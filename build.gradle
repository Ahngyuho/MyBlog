plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    // Spring Rest Docs
    //https://docs.spring.io/spring-restdocs/docs/current/reference/html5/#getting-started-build-configuration
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.blog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    // Spring Rest Docs
    asciidoctorExt
}

// Spring Rest Docs
ext{
    asciidocVersion = "2.0.6.RELEASE"
    snippetsDir = file('build/generated-snippets')
}

repositories {
    mavenCentral()
}

dependencies {
    // query -- 이렇게 해주고 Gradle 의 build 의 classes 실행
    // queryDSL 설정
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor    "jakarta.persistence:jakarta.persistence-api"
    // query --

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    //Spring Rest Docs
    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

//Spring Rest Docs
test {
    outputs.dir snippetsDir
}

//Querydsl 설정
def generated = 'src/main/generated'

//querydsl QClass 파일 생성 위치 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

//
sourceSets {
    main.java.srcDirs += [ generated ]
}

//gradle clean 할 때 generated를 삭제하라는 것
clean {
    delete file(generated)
}

//Spring Rest Docs
asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    //문서가 생성되기 전에 test 실행
    dependsOn test
}

//Spring Rest Docs 로 생성한 문서를
// 이 애플리케이션 Jar 파일에 포함
//이 코드는 문서에서 복붙해온건데 잘 실행 안됨
//bootJar {
//    dependsOn asciidoctor
//    from ("${asciidoctor.outputDir}/html5") {
//        into 'static/docs'
//    }
//}

bootJar {
    dependsOn asciidoctor

    copy{
        from asciidoctor.outputDir
        into "src/main/resources/static/docs"
    }
}
